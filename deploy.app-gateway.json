{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",    
    "parameters": { 
        "webAppName": {
            "defaultValue": "madsd-win",
            "type": "string"
        },
        "virtualNetworkName": {
            "defaultValue": "appservice-vnet",
            "type": "string"
        },
        "appGatewaySubnetName": {
            "defaultValue": "appGatewaySubnet",
            "type": "string"
        }
     },
    "variables": {  
        "webAppName":"[parameters('webAppName')]",
        "hostName": "www.turnbitz.dk",
        "location": "[resourceGroup().location]",
        "skuSize": "Standard_v2",
        "tier": "Standard_v2",
        "autoScaleMinCapacity": 2,
        "autoScaleMaxCapacity": 5,
        "publicIpAddressName": "test-public-ip",
        "applicationGatewayName": "test-application-gateway",
        "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]",
        "backendAddressPoolName": "[concat(variables('webAppName'), 'BackendPool')]",
        "appGatewayIpConfigName": "appGatewayIpConfig",
        "frontendIpConfigurationName": "appGwPublicFrontendIp",
        "virtualNetworkName": "[parameters('virtualNetworkName')]",
        "applicationGatewaySubnetName": "[parameters('appGatewaySubnetName')]",
        "vnetId": "[resourceId('gateway','Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "applicationGatewaySubnetId": "[concat(variables('vnetId'), '/subnets/', variables('applicationGatewaySubnetName'))]"
        
        
        
    },
    "functions": [  ],
    "resources": [ 
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard"
            },            
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-02-01",
            "name": "[variables('applicationGatewayName')]",
            "location": "[variables('location')]",
            "dependsOn": [                
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
            ],
            "tags": {},            
            "properties": {
                "enableHttp2": false,
                "autoscaleConfiguration": {
                    "minCapacity": "[variables('autoScaleMinCapacity')]",
                    "maxCapacity": "[variables('autoScaleMaxCapacity')]"
                },
                "sku": {
                    "name": "[variables('skuSize')]",
                    "tier": "[variables('tier')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "[variables('appGatewayIpConfigName')]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('applicationGatewaySubnetId')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('frontendIpConfigurationName')]",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_443",
                        "properties": {
                            "Port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('backendAddressPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[concat(variables('webAppName'), '.azurewebsites.net')]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "linuxdockerhttpsetting",
                        "properties": {
                            "Port": 443,
                            "Protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 20,
                            "connectionDraining": {
                                "drainTimeoutInSec": 60,
                                "enabled": true
                            },
                            "hostName": "linuxdocker.turnbitz.dk",
                            "probe": {
                                "id": "[concat(variables('applicationGatewayId'), '/probes/httpsettingprobe')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "test-listner",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/linuxdockercert')]"
                            },
                            "hostName": "[variables('hostName')]"
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "linuxdocker",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayId'), '/httpListeners/test-listner')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/linuxdocker')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/linuxdockerhttpsetting')]"
                            }
                        }
                    }
                ],                
                "sslCertificates": [
                    {
                        "name": "linuxdockercert",
                        "properties": {
                            "data": "[parameters('linuxdockercert_data')]",
                            "password": "[parameters('linuxdockercert_password')]"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "httpsettingprobe",
                        "properties": {
                            "backendHttpSettings": [
                                {
                                    "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/linuxdockerhttpsetting')]"
                                }
                            ],
                            "interval": 30,
                            "minServers": 0,
                            "path": "/",
                            "protocol": "Https",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": false,
                            "host": "[variables('hostName')]"
                        }
                    }
                ]                
            }
        }
    ],
    "outputs": {  }
  }
